"""Задание 3. Дан список чисел. Посчитать сколько раз встречается каждое число.
 Использовать для подсчёта функцию."""

import random


def count_elements(collection: list[str | int | float | tuple] | tuple[str | int | float | tuple] | str)\
        -> dict[str | int | tuple | float, int]:
    # не уверен в правильности таких аннотаций, но я понял что делать нужно примерно так
    """ Принимает в качестве аргумента строку, список или кортеж и возвращает словарь,
    ключами которого являются элементы переданного выражения, а значениями -
    количество вхождений данных элементов.
    ВАЖНО: значениями передаваемых в функцию списка или кортежа должны быть объекты
    неизменяемых типов.
    """

    my_dict = {}
    for c in collection:
        my_dict[c] = my_dict.setdefault(c, 0) + 1
    return my_dict


rand_list = [random.randint(1, 20) for _ in range(100)]  # cгенерируем случайный список из целых чисел
print(rand_list)  # выведем его
# передадим список rand_list в качестве аргумента функции count_elements() и выведем его
print(count_elements(rand_list), end='\n\n')  # вывод словаря, где ключи - элементы списка, значения - кол-во вхождений

# аналогично функция работает и с кортежами
my_tuple = (1.23, 2, 3, 5, 10, 32, 1, 20, 10, 32, 5, 5, 5, 10, 1)
print(count_elements(my_tuple), end='\n\n')

# также работает корректно со списком кортежей
my_list_tuple = [(1, 2, 3), (11, 2)]
print(count_elements(my_list_tuple), end='\n\n')

# # При попытке передать в функцию кортеж списков (или вложенный список) генерируется ошибка
# my_list_list = [[1, 2, 3], [11, 2]]
# print(count_elements(my_list_list), end='\n\n')

# немного поработал здесь с аннотациями, было интересно как это работает, как выводится
print(count_elements.__annotations__)
